/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.13/samples
 */
plugins {
    id 'java'
    id 'groovy'
    id 'application'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs' // or the directory where your local JAR is stored
    }
}

dependencies {
    // Add the Groovy runtime library
    implementation 'org.apache.groovy:groovy-all:4.0.26'
    // corese : switch between local and remote
    if (project.hasProperty('coreseVersion') && project.coreseVersion == 'local') {
        // If coreseVersion is 'local', include local JAR files from the 'libs' directory
        implementation fileTree(dir: 'libs', include: ['*.jar'])
    } else if (project.hasProperty('coreseVersion') && project.coreseVersion != 'local') {
        implementation 'fr.inria.corese:corese-core:' + project.coreseVersion
    } else if (project.hasProperty('coreseCommit')) {
        // If coreseCommit is provided, use the specific commit version
        implementation fileTree(dir: project.coreseCommit, include: ['*.jar'])
        } else {
        // default to the latest version if no property is set
        implementation 'fr.inria.corese:corese-core:4.6.3'
    }
    // Apache Jena dependencies
    def jenaVersion = project.hasProperty('jenaVersion') ? project.jenaVersion : '4.10.0'
    implementation "org.apache.jena:jena-core:${jenaVersion}"
    implementation "org.apache.jena:jena-arq:${jenaVersion}"
    // RDF4J dependencies
    def rdf4jVersion = project.hasProperty('rdf4jVersion') ? project.rdf4jVersion : '5.1.2'
    implementation "org.eclipse.rdf4j:rdf4j-repository:${rdf4jVersion}"
    implementation "org.eclipse.rdf4j:rdf4j-sail-memory:${rdf4jVersion}"
    implementation "org.eclipse.rdf4j:rdf4j-repository-sail:${rdf4jVersion}"
    implementation "org.eclipse.rdf4j:rdf4j-rio:${rdf4jVersion}"
    // Apache HTTP client dependencies (for RDF4J)
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpcore:4.4.14'
    implementation 'commons-logging:commons-logging:1.2'
    // Add SLF4J implementation
    implementation 'ch.qos.logback:logback-classic:1.4.14'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

task runGroovyScript(type: JavaExec) {
    group = 'application'
    description = 'Run the Groovy script'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'benchmark'

    // Add memory settings
    jvmArgs = [
        '-Xmx12g',  // Maximum heap size (adjust value as needed)
        '-Xms4g'   // Initial heap size
    ]
}
